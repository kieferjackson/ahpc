import assessment_questions from"./question_data.js";import ProgressBar from"./ProgressBar.js";const PROGRESS_BAR_IDS={container:'progress_bar_container',svg:'progress_bar_svg',rect:'progress_bar'};var fields_filled=0;const PROGRESS_DISPLAY={};window.generateEligibilityAssessment=generateEligibilityAssessment;function generateEligibilityAssessment(){const eligibility_assessment_form=document.querySelector('#eligibility_assessment_form');generateProgressDisplay('progress_display_container');function generateProgressDisplay(progress_display_container_id)
{const progress_display_container=document.querySelector(`#${progress_display_container_id}`);progress_display_container.style.display='flex';const progress_heading=generate_element('h4',{id:'progress_heading',innerText:'Assessment Progress'});const{container,svg,rect}=PROGRESS_BAR_IDS;PROGRESS_DISPLAY.bar=new ProgressBar(container,svg,rect);PROGRESS_DISPLAY.count=generate_element('div',{className:'progress_count_container',innerText:`0/${assessment_questions.length}`});const progress_indicators_container=generate_element('div',{className:'progress_indicators_container'});progress_indicators_container.append(PROGRESS_DISPLAY.bar.container,PROGRESS_DISPLAY.count);const tooltip_notice=generate_element('small',{className:'tooltip_notice',innerHTML:`Hover,tap on,or press<kbd>Tab</kbd>to focus<em class="tooltip_notice highlight">underlined text</em>for definitions of the word or phrase highlighted.`});progress_display_container.append(progress_heading,progress_indicators_container,tooltip_notice);}
function generateQuestionText(question_data)
{const{prompt,terms}=question_data;let prompt_fragments=[];if(terms.length>0)
{let promptStart=0;terms.forEach(({term,definition},term_index,term_list)=>{const term_loc=prompt.search(term);const prior_text=prompt.slice(promptStart,term_loc);promptStart=term_loc+term.length;const term_tooltip=`<span aria-describedby="${term}-definition"aria-label="${term}"class="term_tooltip"tabindex="0">${term}<span role="tooltip"id="${term}-definition"class="tooltip_text">${definition}</span></span>`;const endString=term_index===term_list.length-1?prompt.slice(promptStart,prompt.length):'';prompt_fragments.push(prior_text+term_tooltip+endString);});const term_tooltipsInnerHTML=prompt_fragments.reduce((termInnerHTML,prompt_fragment)=>{return termInnerHTML+=prompt_fragment;},'');const question_text=generate_element('p',{className:'question_text',innerHTML:term_tooltipsInnerHTML});return question_text;}
else
{const question_text=generate_element('p',{className:'question_text',innerText:prompt});return question_text;}}
assessment_questions.forEach((question,q_index)=>{const QUESTION_NUMBER=q_index+1;const question_container=generate_element('div',{className:'question_container'});const question_prompt=generate_element('div',{className:'question_prompt'});const question_number=generate_element('div',{className:'question_number',innerText:`Question ${QUESTION_NUMBER}`});const question_text=generateQuestionText(question);question_prompt.append(question_number,question_text);const question_responses=generate_element('div',{className:'question_responses'});question.responses.forEach((response,r_index)=>{const RESPONSE_NUMBER=r_index+1;const input_block=generate_element('div',{className:'form-check input_block'});const response_input=generate_element('input',{className:'form-check-input option_input',id:`q${QUESTION_NUMBER}_option${RESPONSE_NUMBER}`,name:`question-${QUESTION_NUMBER}`,type:'radio',value:response,innerText:response,required:true});response_input.addEventListener('change',updateProgressBarFromChange);const response_label=generate_element('label',{className:'form-check-label option_label',htmlFor:`q${QUESTION_NUMBER}_option${RESPONSE_NUMBER}`,innerText:response});input_block.append(response_input,response_label);question_responses.appendChild(input_block);});question_container.append(question_prompt,question_responses);eligibility_assessment_form.appendChild(question_container);});smoothlyScrollTo(eligibility_assessment_form);}
function updateProgressBarFromChange()
{const ASSESSMENT_FIELDS=document.querySelectorAll('.option_input');const response_inputs=Array.from(ASSESSMENT_FIELDS);const CHECKED_RESPONSES=response_inputs.filter(response_input=>response_input.checked);const num_complete_responses=CHECKED_RESPONSES.length;const num_total_responses=assessment_questions.length;if(fields_filled<num_complete_responses)
{fields_filled=num_complete_responses;PROGRESS_DISPLAY.bar.updateProgressBar(num_complete_responses,num_total_responses);PROGRESS_DISPLAY.count.innerText=`${num_complete_responses}/${num_total_responses}`;}
const progress_indicators_container=PROGRESS_DISPLAY.bar.container.parentElement;if(fields_filled===num_total_responses&&progress_indicators_container)
{PROGRESS_DISPLAY.bar.container.remove();PROGRESS_DISPLAY.count.remove();const progress_heading=document.querySelector('#progress_heading');progress_heading.innerText='Assessment Complete';const submit_button=generate_element('button',{type:'button',className:'submit_button',innerText:'Submit'});submit_button.addEventListener('click',generateAssessmentResults);progress_indicators_container.appendChild(submit_button);progress_indicators_container.style.justifyContent='center';if(!ANIMATION_DISABLED)
{popInText(progress_heading,progress_heading.innerText.length);fadeInPulse(submit_button);}}}
function generateAssessmentResults()
{fields_filled=0;const option_inputs=document.querySelectorAll('.option_input');const checked_responses=Array.from(option_inputs).filter(response_input=>response_input.checked);const question_containers=document.querySelectorAll('.question_container');Array.from(question_containers).forEach(question_container=>question_container.remove());const progress_display_container=document.querySelector('#progress_display_container');Array.from(progress_display_container.children).forEach(progress_display_el=>progress_display_el.remove());const num_yes_responses=checked_responses.reduce((num_yes,response)=>{if(response.value==='Yes')
num_yes++;return num_yes;},0);const generateResultMsg=(heading,msg)=>{const results_container=generate_element('section',{id:'eligibility_results_container',className:'results_container'});const result_msg_heading=generate_element('strong',{className:'result_msg_heading',innerText:heading});const result_msg=generate_element('p',{className:'result_msg',innerText:msg});const contact_list=document.createElement('ul');const email_contact=generate_element('li',{innerHTML:`By email:<a href="mailto:${EMAIL_ADDRESS}">${EMAIL_ADDRESS}</a>`});const phone_contact=generate_element('li',{innerHTML:`By phone:<a class="phone_contact"href="tel:+1-${PHONE_NUMBER}">${PHONE_NUMBER}</a>`});contact_list.append(email_contact,phone_contact);result_msg.appendChild(contact_list);const start_new_assessment=generate_element('button',{type:'button',className:'start_new_assessment',innerText:'Start New Assessment'});start_new_assessment.addEventListener('click',()=>{results_container.remove();const eligibility_assessment_form=document.querySelector('#eligibility_assessment_form');eligibility_assessment_form.appendChild(generateFormStart());smoothlyScrollTo(eligibility_assessment_form);});results_container.append(result_msg_heading,result_msg,start_new_assessment);return results_container;}
let results;const numerals=['none','only one','two','three','four','five','six','seven','eight','nine','ten','eleven'];if(num_yes_responses<=1)results=generateResultMsg(`You appear to be ineligible for hospice`,`Based on your responses,you appear to fulfill ${numerals[num_yes_responses]}of the criteria required to be eligible for hospice care.\nHowever,that does not mean that you are ineligible for hospice,and if you still have concerns or questions about hospice care and/or hospice eligibility,you can contact our office for more information.\n\nOur office can be reached with the following contact information:`);else if(num_yes_responses>1)results=generateResultMsg(`You may qualify for hospice`,`Based on your responses,you may fulfill up to ${numerals[num_yes_responses]}(${num_yes_responses})of the conditions required to be eligible for hospice care.\nYou can contact our office and request a hospice evaluation,and we can send a physician to assess you to determine if you meet the necessary requirements for hospice.\n\nOur office can be reached with the following contact information:`);const eligibility_assessment_container=document.querySelector('#eligibility_assessment_container');progress_display_container.style.display='none';eligibility_assessment_container.appendChild(results);smoothlyScrollTo(eligibility_assessment_container);}
function smoothlyScrollTo(container)
{const nav_anchor=generate_element('a',{className:'nav_anchor form_anchor'});container.insertBefore(nav_anchor,container.firstChild);nav_anchor.scrollIntoView({behavior:'smooth'});nav_anchor.remove();}
function popInText(element,textOffset)
{const popIn=[{opacity:0,filter:`blur(0.25ch)`,transform:`translateX(-${textOffset}ch)`},{opacity:1,filter:`blur(0)`,transform:`translateX(2.5ch)`},{opacity:1,filter:`blur(0.1ch)`,transform:`translateX(0.1ch)`},{opacity:1,filter:`blur(0)`,transform:`translateX(0.5ch)`},{opacity:1,transform:`translateX(0)`}];const popInTiming={duration:800,iterations:1}
element.animate(popIn,popInTiming);}
function fadeInPulse(element)
{const fadeIn=[{opacity:0,filter:`blur(0.1ch)`,transform:`scale(0)`},{filter:`blur(0)`,transform:`scale(0.7)`},{opacity:1,filter:`blur(0)`,transform:`scale(1)`}];const pulseEffect={boxShadow:[`0 0 2px 3px rgba(25,203,248,0.11),0 0 6px 12px rgba(25,203,248,0.1)`,`0 0 3px 6px rgba(25,203,248,0.13),0 0 8px 15px rgba(25,203,248,0.12)`,`0 0 2px 3px rgba(25,203,248,0.11),0 0 6px 12px rgba(25,203,248,0.1)`]}
const fadeInTiming={duration:500,iterations:1}
const pulseEffectTiming={duration:2000,iterations:Infinity}
element.animate(fadeIn,fadeInTiming);element.animate(pulseEffect,pulseEffectTiming);}